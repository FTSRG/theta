digraph G {node_41 [label="TranslationUnitAst"];
node_42 [label="FunctionDefinitionAst"];
node_43 [label="DeclarationSpecifierAst"];
node_42 -> node_43;
node_44 [label="FunctionDeclaratorAst"];
node_42 -> node_44;
node_45 [label="CompoundStatementAst"];
node_46 [label="DeclarationStatementAst"];
node_47 [label="VarDeclarationAst"];
node_48 [label="DeclarationSpecifierAst"];
node_47 -> node_48;
node_49 [label="InitDeclaratorAst"];
node_50 [label="AssignmentInitializerAst"];
node_51 [label="LiteralExpressionAst"];
node_50 -> node_51;
node_49 -> node_50;
node_47 -> node_49;
node_46 -> node_47;
node_45 -> node_46;
node_52 [label="DeclarationStatementAst"];
node_53 [label="VarDeclarationAst"];
node_54 [label="DeclarationSpecifierAst"];
node_53 -> node_54;
node_55 [label="InitDeclaratorAst"];
node_56 [label="AssignmentInitializerAst"];
node_57 [label="LiteralExpressionAst"];
node_56 -> node_57;
node_55 -> node_56;
node_53 -> node_55;
node_52 -> node_53;
node_45 -> node_52;
node_58 [label="WhileStatementAst"];
node_59 [label="BinaryExpressionAst"];
node_60 [label="NameExpressionAst"];
node_59 -> node_60;
node_61 [label="LiteralExpressionAst"];
node_59 -> node_61;
node_58 -> node_59;
node_62 [label="CompoundStatementAst"];
node_63 [label="ExpressionStatementAst"];
node_64 [label="BinaryExpressionAst"];
node_65 [label="NameExpressionAst"];
node_64 -> node_65;
node_66 [label="BinaryExpressionAst"];
node_67 [label="NameExpressionAst"];
node_66 -> node_67;
node_68 [label="NameExpressionAst"];
node_66 -> node_68;
node_64 -> node_66;
node_63 -> node_64;
node_62 -> node_63;
node_69 [label="ExpressionStatementAst"];
node_70 [label="BinaryExpressionAst"];
node_71 [label="NameExpressionAst"];
node_70 -> node_71;
node_72 [label="BinaryExpressionAst"];
node_73 [label="NameExpressionAst"];
node_72 -> node_73;
node_74 [label="LiteralExpressionAst"];
node_72 -> node_74;
node_70 -> node_72;
node_69 -> node_70;
node_62 -> node_69;
node_58 -> node_62;
node_45 -> node_58;
node_75 [label="ExpressionStatementAst"];
node_76 [label="FunctionCallExpressionAst"];
node_77 [label="BinaryExpressionAst"];
node_78 [label="NameExpressionAst"];
node_77 -> node_78;
node_79 [label="LiteralExpressionAst"];
node_77 -> node_79;
node_76 -> node_77;
node_75 -> node_76;
node_45 -> node_75;
node_80 [label="ReturnStatementAst"];
node_81 [label="LiteralExpressionAst"];
node_80 -> node_81;
node_45 -> node_80;
node_42 -> node_45;
node_41 -> node_42;
}