specification CriticalRegion(a : int, b : int) {
	var id : int

	automaton counter(n : int) := {
		init loc initial
		loc count
		
		initial -> count {
			id := 1
		}
		
		count -> count {
			assume id < n;
			id := id + 1
		}
		
		count -> count {
			assume id >= n;
			id := 1
		}
	}
	
	automaton cell(ref x : clock, i : int) := {
		init loc wait
		loc test { x <= a }
		loc req
		loc crit { x <= b }
		loc test2 { x <= a }
		loc safe
		loc error
		
		wait -> test {
			assume x <= b;
			x := 0
		}
		
		test -> wait {
			assume x >= a;
			x := 0
		}
		
		test -> req {
			assume x <= a - 1
		}
		
		req -> crit {
			assume  id = i;
			id := 0;
			x := 0
		}
		
		crit -> test2 {
			assume x <= a - 1;
			id := i;
			x := 0
		}
		
		crit -> error {
			assume x >= b
		}
		
		test2 -> error {
			assume x >= a
		}
		
		test2 -> safe {
			assume x <= a - 1
		}
	}
	
}