specification instance {
	
	property s : {
		// Variables (variable declaration + range def. + initial value)
		local var SEL_1_TEST_TYPE : integer
		invariant SEL_1_TEST_TYPE >= 0
		invariant SEL_1_TEST_TYPE <= 255
		initial SEL_1_TEST_TYPE = 0
		
		local var SEL_2_TEST_TYPE : integer
		invariant SEL_2_TEST_TYPE >= 0
		invariant SEL_2_TEST_TYPE <= 255
		initial SEL_2_TEST_TYPE = 0
		
		local var SEL_ACTIVE_BENCH : integer
		invariant SEL_ACTIVE_BENCH >= 0
		invariant SEL_ACTIVE_BENCH <= 255
		initial SEL_ACTIVE_BENCH = 0
		
		local var SEL_SWITCH_INTERCON : integer
		invariant SEL_SWITCH_INTERCON >= 0
		invariant SEL_SWITCH_INTERCON <= 255
		initial SEL_SWITCH_INTERCON = 0
		
		local var _SEL_1_TEST_TYPE : integer
		invariant _SEL_1_TEST_TYPE >= 0
		invariant _SEL_1_TEST_TYPE <= 255
		initial _SEL_1_TEST_TYPE = 0
		
		local var _SEL_2_TEST_TYPE : integer
		invariant _SEL_2_TEST_TYPE >= 0
		invariant _SEL_2_TEST_TYPE <= 255
		initial _SEL_2_TEST_TYPE = 0
		
		local var _SEL_SWITCH_INTERCON : integer
		invariant _SEL_SWITCH_INTERCON >= 0
		invariant _SEL_SWITCH_INTERCON <= 255
		initial _SEL_SWITCH_INTERCON = 0
		
		local var DO_1_INTERC : boolean
		initial DO_1_INTERC = false
		
		
		// Location variable definition
		local var loc : integer
		invariant loc >= 0 and loc <= 9
		initial loc = 1
		// Automaton state - TTMC loc mapping
		// s2 = 3
		// s0 = 2
		// s6 = 5
		// s4 = 4
		// s44 = 7
		// s8 = 6
		// initial = 1
		// F_C_OUTPUT_IDB_initial = 8
		// end = 0
		// F_C_OUTPUT_IDB_end = 9
		
		
		// Structure
		transition loc' = (
			if loc = 0  then 1 else 
			if loc = 1  then 2 else 
			if loc = 2  then 3 else 
			if loc = 3 and (SEL_1_TEST_TYPE  >  9) then 4 else 
			if loc = 3 and (not (SEL_1_TEST_TYPE  >  9)) then 4 else 
			if loc = 4 and (SEL_2_TEST_TYPE  >  9) then 5 else 
			if loc = 4 and (not (SEL_2_TEST_TYPE  >  9)) then 5 else 
			if loc = 5 and (SEL_ACTIVE_BENCH  /=  1) then 6 else 
			if loc = 5 and (not (SEL_ACTIVE_BENCH  /=  1)) then 6 else 
			if loc = 6 and (SEL_ACTIVE_BENCH  /=  2) then 7 else 
			if loc = 6 and (not (SEL_ACTIVE_BENCH  /=  2)) then 7 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  (_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)) then 8 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)))  and  (((_SEL_1_TEST_TYPE  =  7) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2)))) then 8 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  (((_SEL_2_TEST_TYPE  =  7) or (_SEL_2_TEST_TYPE  =  6) or (_SEL_2_TEST_TYPE  =  5) or (_SEL_2_TEST_TYPE  =  4) or (_SEL_2_TEST_TYPE  =  3) or (_SEL_2_TEST_TYPE  =  1) or (_SEL_2_TEST_TYPE  =  2)))  and  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)))  and  (not (((_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2) or (_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  7))))) then 8 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  ((_SEL_2_TEST_TYPE  =  9)  or  (_SEL_2_TEST_TYPE  =  8)  or  (_SEL_1_TEST_TYPE  =  8)  or  (_SEL_1_TEST_TYPE  =  9))  and  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)))  and  (not (((_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2) or (_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  7))))  and  (not (((_SEL_2_TEST_TYPE  =  1) or (_SEL_2_TEST_TYPE  =  2) or (_SEL_2_TEST_TYPE  =  3) or (_SEL_2_TEST_TYPE  =  4) or (_SEL_2_TEST_TYPE  =  5) or (_SEL_2_TEST_TYPE  =  6) or (_SEL_2_TEST_TYPE  =  7))))) then 8 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  (not ((_SEL_1_TEST_TYPE  =  8)  or  (_SEL_1_TEST_TYPE  =  9)  or  (_SEL_2_TEST_TYPE  =  8)  or  (_SEL_2_TEST_TYPE  =  9)))  and  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)))  and  (not (((_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2) or (_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  7))))  and  (not (((_SEL_2_TEST_TYPE  =  1) or (_SEL_2_TEST_TYPE  =  2) or (_SEL_2_TEST_TYPE  =  3) or (_SEL_2_TEST_TYPE  =  4) or (_SEL_2_TEST_TYPE  =  5) or (_SEL_2_TEST_TYPE  =  6) or (_SEL_2_TEST_TYPE  =  7))))) then 8 else 
			if loc = 9  then 0 else 
			if loc = 8  then 9 
 else			loc // stay in the same location if no IM transitions are allowed
		)
						
		// Transitions
		transition (
			if loc = 1  then true 
 else			SEL_1_TEST_TYPE' = SEL_1_TEST_TYPE // keep the old value if it is not assigned
		)
		transition (
			if loc = 1  then true 
 else			SEL_2_TEST_TYPE' = SEL_2_TEST_TYPE // keep the old value if it is not assigned
		)
		transition (
			if loc = 1  then true 
 else			SEL_ACTIVE_BENCH' = SEL_ACTIVE_BENCH // keep the old value if it is not assigned
		)
		transition (
			if loc = 1  then true 
 else			SEL_SWITCH_INTERCON' = SEL_SWITCH_INTERCON // keep the old value if it is not assigned
		)
		transition (
			if loc = 2  then _SEL_1_TEST_TYPE' = SEL_1_TEST_TYPE else 
			if loc = 3 and (SEL_1_TEST_TYPE  >  9) then _SEL_1_TEST_TYPE' = 0 else 
			if loc = 5 and (SEL_ACTIVE_BENCH  /=  1) then _SEL_1_TEST_TYPE' = 0 
 else			_SEL_1_TEST_TYPE' = _SEL_1_TEST_TYPE // keep the old value if it is not assigned
		)
		transition (
			if loc = 2  then _SEL_2_TEST_TYPE' = SEL_2_TEST_TYPE else 
			if loc = 4 and (SEL_2_TEST_TYPE  >  9) then _SEL_2_TEST_TYPE' = 0 else 
			if loc = 6 and (SEL_ACTIVE_BENCH  /=  2) then _SEL_2_TEST_TYPE' = 0 
 else			_SEL_2_TEST_TYPE' = _SEL_2_TEST_TYPE // keep the old value if it is not assigned
		)
		transition (
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  (_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)) then _SEL_SWITCH_INTERCON' = 0 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)))  and  (((_SEL_1_TEST_TYPE  =  7) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2)))) then _SEL_SWITCH_INTERCON' = 1 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  (((_SEL_2_TEST_TYPE  =  7) or (_SEL_2_TEST_TYPE  =  6) or (_SEL_2_TEST_TYPE  =  5) or (_SEL_2_TEST_TYPE  =  4) or (_SEL_2_TEST_TYPE  =  3) or (_SEL_2_TEST_TYPE  =  1) or (_SEL_2_TEST_TYPE  =  2)))  and  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)))  and  (not (((_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2) or (_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  7))))) then _SEL_SWITCH_INTERCON' = 2 else 
			if loc = 7 and ((((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))  or  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0))))  and  ((_SEL_2_TEST_TYPE  =  9)  or  (_SEL_2_TEST_TYPE  =  8)  or  (_SEL_1_TEST_TYPE  =  8)  or  (_SEL_1_TEST_TYPE  =  9))  and  (not ((_SEL_1_TEST_TYPE  =  0)  and  (_SEL_2_TEST_TYPE  =  0)))  and  (not (((_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2) or (_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  7))))  and  (not (((_SEL_2_TEST_TYPE  =  1) or (_SEL_2_TEST_TYPE  =  2) or (_SEL_2_TEST_TYPE  =  3) or (_SEL_2_TEST_TYPE  =  4) or (_SEL_2_TEST_TYPE  =  5) or (_SEL_2_TEST_TYPE  =  6) or (_SEL_2_TEST_TYPE  =  7))))) then _SEL_SWITCH_INTERCON' = SEL_SWITCH_INTERCON 
 else			_SEL_SWITCH_INTERCON' = _SEL_SWITCH_INTERCON // keep the old value if it is not assigned
		)
		transition (
			if loc = 9  then DO_1_INTERC' = (((9  =  _SEL_2_TEST_TYPE)  or  (8  =  _SEL_2_TEST_TYPE)  or  (((_SEL_1_TEST_TYPE  =  3) or (_SEL_1_TEST_TYPE  =  1) or (_SEL_1_TEST_TYPE  =  2) or (_SEL_1_TEST_TYPE  =  4) or (_SEL_1_TEST_TYPE  =  5) or (_SEL_1_TEST_TYPE  =  6) or (_SEL_1_TEST_TYPE  =  7))))  and  (1  =  _SEL_SWITCH_INTERCON)) 
 else			DO_1_INTERC' = DO_1_INTERC // keep the old value if it is not assigned
		)

	}
models

G((loc = 0 and ( _SEL_1_TEST_TYPE  !=   8   and  _SEL_1_TEST_TYPE  !=   9  )) imply ( DO_1_INTERC  =   (  _SEL_SWITCH_INTERCON  =   1   )  ))
}
